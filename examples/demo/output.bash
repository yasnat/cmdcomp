#!/bin/bash
#
# Code generated by cmdcomp "$CMDCOMP_VERSION". DO NOT EDIT.
# For more information about cmdcomp, please refer to https://github.com/yassun7010/cmdcomp .
#

_mycli() {
  local word cmd opts cword cmd_cword opts_cword
  COMPREPLY=()
  cmd=""
  opts=""
  cword=0
  cmd_cword=0
  opts_cword=0

  for word in ${COMP_WORDS[@]}; do
    case "${cmd},${word}" in
      ",$1")
        cmd="_mycli"
        cword=$(( cword + opts_cword + 1 ))
        ;;

      _mycli,gcloud)
        cmd="_mycli_gcloud"
        cword=$(( cword + opts_cword + 1 ))
        ;;

      _mycli,gcs)
        cmd="_mycli_gcs"
        cword=$(( cword + opts_cword + 1 ))
        ;;

      _mycli,composer-operation)
        cmd="_mycli_composer_operation"
        cword=$(( cword + opts_cword + 1 ))
        ;;

      _mycli,git)
        cmd="_mycli_git"
        cword=$(( cword + opts_cword + 1 ))
        ;;

      _mycli,test)
        cmd="_mycli_test"
        cword=$(( cword + opts_cword + 1 ))
        ;;

      _mycli_test,rubocop)
        cmd="_mycli_test_rubocop"
        cword=$(( cword + opts_cword + 1 ))
        ;;

      _mycli_test,pytest)
        cmd="_mycli_test_pytest"
        cword=$(( cword + opts_cword + 1 ))
        ;;

      *)
        opts_cword=$(( opts_cword + 1 ))
        ;;
    esac
  done

  case "${cmd}" in
    _mycli)
      cmd_cword=$cword
      while [ $cword -lt $COMP_CWORD ] ; do
        cword=$(( cword + 1 ))
        case "${COMP_WORDS[cword-1]}" in
          --verbose)
            cmd_cword=$(( cmd_cword + 1 ))
            ;;

          --help)
            cmd_cword=$(( cmd_cword + 1 ))
            ;;

          *)
            break
            ;;
        esac
      done

      if [[ ${COMP_WORDS[COMP_CWORD]} == -* ]] ; then
        opts="--verbose --help"
        COMPREPLY=( $(compgen -W "${opts}" -- "${COMP_WORDS[COMP_CWORD]}") )
        return 0
      elif [ $cword -eq $COMP_CWORD ] ; then
        opts="gcloud gcs composer-operation git test"
        COMPREPLY=( $(compgen -W "${opts}" -- "${COMP_WORDS[COMP_CWORD]}") )
        return 0
      fi

      return 0
      ;;

    _mycli_gcloud)
      cmd_cword=$cword
      while [ $cword -lt $COMP_CWORD ] ; do
        cword=$(( cword + 1 ))
      done

      opts=""
      COMPREPLY=( $(compgen -W "${opts}" -- "${COMP_WORDS[COMP_CWORD]}") )

      return 0
      ;;

    _mycli_gcs)
      cmd_cword=$cword
      while [ $cword -lt $COMP_CWORD ] ; do
        cword=$(( cword + 1 ))
      done

      opts=""
      COMPREPLY=( $(compgen -W "${opts}" -- "${COMP_WORDS[COMP_CWORD]}") )

      return 0
      ;;

    _mycli_composer_operation)
      cmd_cword=$cword
      while [ $cword -lt $COMP_CWORD ] ; do
        cword=$(( cword + 1 ))
      done

      opts=""
      COMPREPLY=( $(compgen -W "${opts}" -- "${COMP_WORDS[COMP_CWORD]}") )

      return 0
      ;;

    _mycli_git)
      cmd_cword=$cword
      while [ $cword -lt $COMP_CWORD ] ; do
        cword=$(( cword + 1 ))
      done

      opts=""
      COMPREPLY=( $(compgen -W "${opts}" -- "${COMP_WORDS[COMP_CWORD]}") )

      return 0
      ;;

    _mycli_test)
      cmd_cword=$cword
      while [ $cword -lt $COMP_CWORD ] ; do
        cword=$(( cword + 1 ))
      done

      if [[ ${COMP_WORDS[COMP_CWORD]} == -* ]] ; then
        opts=""
        COMPREPLY=( $(compgen -W "${opts}" -- "${COMP_WORDS[COMP_CWORD]}") )
        return 0
      elif [ $cword -eq $COMP_CWORD ] ; then
        opts="rubocop pytest"
        COMPREPLY=( $(compgen -W "${opts}" -- "${COMP_WORDS[COMP_CWORD]}") )
        return 0
      fi

      return 0
      ;;

    _mycli_test_rubocop)
      cmd_cword=$cword
      while [ $cword -lt $COMP_CWORD ] ; do
        cword=$(( cword + 1 ))
        case "${COMP_WORDS[cword-1]}" in
          --auto-correct|-A)
            cmd_cword=$(( cmd_cword + 1 ))
            ;;

          *)
            break
            ;;
        esac
      done

      opts="--auto-correct -A"
      COMPREPLY=( $(compgen -W "${opts}" -- "${COMP_WORDS[COMP_CWORD]}") )

      return 0
      ;;

    _mycli_test_pytest)
      cmd_cword=$cword
      while [ $cword -lt $COMP_CWORD ] ; do
        cword=$(( cword + 1 ))
      done

      opts=""
      COMPREPLY=( $(compgen -W "${opts}" -- "${COMP_WORDS[COMP_CWORD]}") )

      return 0
      ;;

  esac
}

complete -F _mycli -o bashdefault -o default mycli

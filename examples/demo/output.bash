#!/bin/bash
#
# Code generated by cmdcomp "$CMDCOMP_VERSION". DO NOT EDIT.
# For more information about cmdcomp, please refer to https://github.com/yassun7010/cmdcomp .
#

_mycli() {
  local word cmd opts cword cmd_cword opts_cword
  COMPREPLY=()
  cmd=""
  opts=""
  cword=0
  cmd_cword=0
  opts_cword=0

  for word in ${COMP_WORDS[@]}; do
    case "${cmd},${word}" in
      ",$1")
        cmd="_mycli"
        cword=$(( cword + opts_cword + 1 ))
        ;;

      _mycli,production|_mycli,development)
        cmd="_mycli_production"
        cword=$(( cword + opts_cword + 1 ))
        ;;

      _mycli_production,aws)
        cmd="_mycli_production_aws"
        cword=$(( cword + opts_cword + 1 ))
        ;;

      _mycli_production,s3)
        cmd="_mycli_production_s3"
        cword=$(( cword + opts_cword + 1 ))
        ;;

      _mycli_production,gcloud)
        cmd="_mycli_production_gcloud"
        cword=$(( cword + opts_cword + 1 ))
        ;;

      _mycli_production,gcs)
        cmd="_mycli_production_gcs"
        cword=$(( cword + opts_cword + 1 ))
        ;;

      _mycli_production,composer-operation)
        cmd="_mycli_production_composer_operation"
        cword=$(( cword + opts_cword + 1 ))
        ;;

      _mycli,test)
        cmd="_mycli_test"
        cword=$(( cword + opts_cword + 1 ))
        ;;

      _mycli_test,rubocop)
        cmd="_mycli_test_rubocop"
        cword=$(( cword + opts_cword + 1 ))
        ;;

      _mycli_test,pytest)
        cmd="_mycli_test_pytest"
        cword=$(( cword + opts_cword + 1 ))
        ;;

      *)
        opts_cword=$(( opts_cword + 1 ))
        ;;
    esac
  done

  case "${cmd}" in
    _mycli)
      cmd_cword=$cword
      while [ $cword -lt $COMP_CWORD ] ; do
        cword=$(( cword + 1 ))
        case "${COMP_WORDS[cword-1]}" in
          --verbose)
            cmd_cword=$(( cmd_cword + 1 ))
            ;;

          --help)
            cmd_cword=$(( cmd_cword + 1 ))
            ;;

          *)
            break
            ;;
        esac
      done

      if [[ ${COMP_WORDS[COMP_CWORD]} == -* ]] ; then
        opts="--verbose --help"
        COMPREPLY=( $(compgen -W "${opts}" -- "${COMP_WORDS[COMP_CWORD]}") )
        return 0
      elif [ $cword -eq $COMP_CWORD ] ; then
        opts="production development test"
        COMPREPLY=( $(compgen -W "${opts}" -- "${COMP_WORDS[COMP_CWORD]}") )
        return 0
      fi
      return 0
      ;;

    _mycli_production)
      cmd_cword=$cword
      while [ $cword -lt $COMP_CWORD ] ; do
        cword=$(( cword + 1 ))
      done

      if [[ ${COMP_WORDS[COMP_CWORD]} == -* ]] ; then
        opts=""
        COMPREPLY=( $(compgen -W "${opts}" -- "${COMP_WORDS[COMP_CWORD]}") )
        return 0
      elif [ $cword -eq $COMP_CWORD ] ; then
        opts="aws s3 gcloud gcs composer-operation"
        COMPREPLY=( $(compgen -W "${opts}" -- "${COMP_WORDS[COMP_CWORD]}") )
        return 0
      fi
      return 0
      ;;

    _mycli_production_aws)
      cmd_cword=$cword
      while [ $cword -lt $COMP_CWORD ] ; do
        cword=$(( cword + 1 ))
      done

      local word=${COMP_WORDS[@]::$cmd_cword}
      COMP_POINT=$((COMP_POINT + 3 - ${#word} ))
      COMP_LINE="aws ${COMP_WORDS[@]:$cmd_cword}"
      COMP_WORDS=($COMP_LINE)
      COMP_CWORD=$(( ${#COMP_WORDS[@]} - 1 ))
      (( COMP_CWORD < 1 )) && COMP_CWORD=1

      type "_command_offset" > /dev/null 2>&1 && _command_offset 0
      return 0
      ;;

    _mycli_production_s3)
      cmd_cword=$cword
      while [ $cword -lt $COMP_CWORD ] ; do
        cword=$(( cword + 1 ))
      done

      local word=${COMP_WORDS[@]::$cmd_cword}
      COMP_POINT=$((COMP_POINT + 6 - ${#word} ))
      COMP_LINE="aws s3 ${COMP_WORDS[@]:$cmd_cword}"
      COMP_WORDS=($COMP_LINE)
      COMP_CWORD=$(( ${#COMP_WORDS[@]} - 1 ))
      (( COMP_CWORD < 1 )) && COMP_CWORD=1

      type "_command_offset" > /dev/null 2>&1 && _command_offset 0
      return 0
      ;;

    _mycli_production_gcloud)
      cmd_cword=$cword
      while [ $cword -lt $COMP_CWORD ] ; do
        cword=$(( cword + 1 ))
      done

      local word=${COMP_WORDS[@]::$cmd_cword}
      COMP_POINT=$((COMP_POINT + 6 - ${#word} ))
      COMP_LINE="gcloud ${COMP_WORDS[@]:$cmd_cword}"
      COMP_WORDS=($COMP_LINE)
      COMP_CWORD=$(( ${#COMP_WORDS[@]} - 1 ))
      (( COMP_CWORD < 1 )) && COMP_CWORD=1

      type "_command_offset" > /dev/null 2>&1 && _command_offset 0
      return 0
      ;;

    _mycli_production_gcs)
      cmd_cword=$cword
      while [ $cword -lt $COMP_CWORD ] ; do
        cword=$(( cword + 1 ))
      done

      local word=${COMP_WORDS[@]::$cmd_cword}
      COMP_POINT=$((COMP_POINT + 14 - ${#word} ))
      COMP_LINE="gcloud storage ${COMP_WORDS[@]:$cmd_cword}"
      COMP_WORDS=($COMP_LINE)
      COMP_CWORD=$(( ${#COMP_WORDS[@]} - 1 ))
      (( COMP_CWORD < 1 )) && COMP_CWORD=1

      type "_command_offset" > /dev/null 2>&1 && _command_offset 0
      return 0
      ;;

    _mycli_production_composer_operation)
      cmd_cword=$cword
      while [ $cword -lt $COMP_CWORD ] ; do
        cword=$(( cword + 1 ))
      done

      local word=${COMP_WORDS[@]::$cmd_cword}
      COMP_POINT=$((COMP_POINT + 26 - ${#word} ))
      COMP_LINE="gcloud composer operations ${COMP_WORDS[@]:$cmd_cword}"
      COMP_WORDS=($COMP_LINE)
      COMP_CWORD=$(( ${#COMP_WORDS[@]} - 1 ))
      (( COMP_CWORD < 1 )) && COMP_CWORD=1

      type "_command_offset" > /dev/null 2>&1 && _command_offset 0
      return 0
      ;;

    _mycli_test)
      cmd_cword=$cword
      while [ $cword -lt $COMP_CWORD ] ; do
        cword=$(( cword + 1 ))
      done

      if [[ ${COMP_WORDS[COMP_CWORD]} == -* ]] ; then
        opts=""
        COMPREPLY=( $(compgen -W "${opts}" -- "${COMP_WORDS[COMP_CWORD]}") )
        return 0
      elif [ $cword -eq $COMP_CWORD ] ; then
        opts="rubocop pytest"
        COMPREPLY=( $(compgen -W "${opts}" -- "${COMP_WORDS[COMP_CWORD]}") )
        return 0
      fi
      return 0
      ;;

    _mycli_test_rubocop)
      cmd_cword=$cword
      while [ $cword -lt $COMP_CWORD ] ; do
        cword=$(( cword + 1 ))
        case "${COMP_WORDS[cword-1]}" in
          --auto-correct|-A)
            cmd_cword=$(( cmd_cword + 1 ))
            ;;

          *)
            break
            ;;
        esac
      done

      opts="--auto-correct -A"
      COMPREPLY=( $(compgen -W "${opts}" -- "${COMP_WORDS[COMP_CWORD]}") )
      return 0
      ;;

    _mycli_test_pytest)
      cmd_cword=$cword
      while [ $cword -lt $COMP_CWORD ] ; do
        cword=$(( cword + 1 ))
      done

      opts=""
      COMPREPLY=( $(compgen -W "${opts}" -- "${COMP_WORDS[COMP_CWORD]}") )
      return 0
      ;;

  esac
}

complete -F _mycli -o bashdefault mycli

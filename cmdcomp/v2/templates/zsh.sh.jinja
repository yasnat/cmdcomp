{%- set func_name = "_" + app_name|replace("-","_") -%}
#!/bin/zsh

{{ func_name }}() {
    local context curcontext=$curcontext state line
    declare -A opt_args
    local ret=1

    _arguments -C \
{%- for key, keyword in root.keyword_arguments.items() %}
        {% if keyword.aliases|length == 0 -%}
            {{ key }}
        {%- else -%}
            {{ "{" + ([key] + keyword.aliases)|join(",") + "}" }}
        {%- endif -%}
            '{%- if keyword.description is not none -%}[{{ keyword.description }}]{%- endif -%}
{%- if keyword.type == 'values' -%}
        :values:{{ "(" + keyword.values|map("string")|join(" ") + ")" }}
{%- elif keyword.type == 'file' -%}
        :file:_files{%- if keyword.base_path is not none %} -W "{{ keyword.base_path }}"{%- endif -%}
{%- elif keyword.type == 'command' -%}
        :command:_values '{{ key|trim("-") }}' $({{ keyword.execute }})
{%- elif keyword.type == 'flag' -%}
{%- endif -%}
        ' \
{%- endfor %}
{%- for key, positional in root.positional_arguments.items() %}
        '{{ key }}: arg:{{ "(" + positional.values|map("string")|join(" ") + ")" }}' \
{%- endfor %}
{%- if root.positional_wildcard_argument is not none %}
        '*: arg:{{ "(" + root.positional_wildcard_argument.values|map("string")|join(" ") + ")" }}' \
{%- else %}
        '*:: :->null' \
{%- endif %}
        && return 1

    return 0
}

compdef {{ func_name }} {{ ([app_name] + app_aliases)|join(" ") }}

{%- set func_name = "_" + app_name|replace("-","_") -%}
#!/bin/bash
#
# Code generated by cmdcomp "{{ version }}". DO NOT EDIT.
# For more information about cmdcomp, please refer to https://github.com/yassun7010/cmdcomp .
#

{{ func_name }}() {
    local cur prev words cword split
    _init_completion || return

    case $cword in
        1)
            COMPREPLY=( $(compgen -W "{{ completions_list[0]|join(" ") }}" -- "$cur") )
            ;;
{%- for completions in completions_list[1:] %}
        {{ loop.index + 1 }})
            case ${words[{{ loop.depth }}]} in
{%- for name, completion in completions.items() recursive %}
                {{ name }})
{%- if completion is mapping %}
                    case ${words[{{ loop.depth + 1 }}]} in
{{- loop(completion.items())|indent(width=8) }}
                    esac
                    ;;
{%- elif completion|first is mapping and 'command' in completion|first %}
                    COMPREPLY=( $(compgen -W "{{ (completion|first).command }}" -- "$cur") )
                    ;;
{%- elif completion|first is mapping and 'file' in completion|first %}
                    file_completion "{{ (completion|first).file }}"
                    ;;
{%- else %}
                    COMPREPLY=( $(compgen -W "{{ completion|join(" ") }}" -- "$cur") )
                    ;;
{%- endif %}
{%- endfor %}
            esac
            ;;
{%- endfor %}
    esac
}

file_completion() {
    local cur prev cword opts
    _get_comp_words_by_ref -n : cur prev cword
    dir="$(echo ${cur} | grep -o ".*/")"
    if test "${dir}" ;then
        COMPREPLY=( $(compgen -W "$(ls -F $1/${dir} | sed -E "s@(.*)@${dir}\1@g")" -- "${cur}") )
    else
        COMPREPLY=( $(compgen -W "$(ls -F $1/)" -- "${cur}") )
    fi
}

complete -F {{ func_name }} {{ app_name }}
{%- for app_alias in app_aliases %}
complete -F {{ func_name }} {{ app_alias }}
{%- endfor %}
